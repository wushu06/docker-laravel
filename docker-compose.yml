version: '3'

networks:
  laravel:

services:
  site:
    build:
      context: .
      dockerfile: nginx.dockerfile
      args:
        - NGINXUSER=${NGINXUSER:-www-data}
        - NGINXGROUP=${NGINXGROUP:-www-data}
    container_name: nginx_${NAME}
    ports:
      - ${NGINX_PORT}:80
      - 431:443
    volumes:
      - ..:/var/www/html:delegated
      - ./nginx/certs:/etc/nginx/certs:delegated
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    networks:
      laravel:
        aliases:
          - ${NAME}.localhost

  mysql:
    image: mariadb:10.6
    container_name: mysql_${NAME}
    restart: unless-stopped
    tty: true
    ports:
      - ${MYSQL_PORT}:3306
    environment:
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./dbdata:/var/lib/mysql
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: php.dockerfile
      args:
        - PHPUSER=${PHPUSER:-www-data}
        - PHPGROUP=${PHPGROUP:-www-data}
    container_name: php_${NAME}
    volumes:
      - ..:/var/www/html:delegated
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
      - ./xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: redis_${NAME}
    restart: unless-stopped
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - laravel

  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
      args:
        - PHPUSER=${PHPUSER:-www-data}
        - PHPGROUP=${PHPGROUP:-www-data}
    container_name: composer_${NAME}
    volumes:
      - ..:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: ${PHPUSER:-www-data}
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - laravel

#  npm:
#    image: node:${NODE_VERSION}
#    container_name: npm_${NAME}
#    volumes:
#      - ..:/var/www/html
#    ports:
#      - ${NODE_PORT_1}:3000
#      - ${NODE_PORT_2}:3001
#    working_dir: /var/www/html
#    entrypoint: ['npm']
#    networks:
#      - laravel

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
      args:
        - PHPUSER=${PHPUSER:-www-data}
        - PHPGROUP=${PHPGROUP:-www-data}
    container_name: artisan_${NAME}
    volumes:
      - ..:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog_${NAME}
    ports:
      - ${MAILHOG_PORT_1}:1025
      - ${MAILHOG_PORT_2}:8025
    networks:
      - laravel

#  meilisearch:
#    image: metamehta/meilisearch-arm64
#    #command: ./meilisearch --master-key=masterKey --no-analytics=true
#    container_name: meilisearch_test
#    ports:
#      - "7700:7700"

#  selenium:
#    image: 'selenium/standalone-chrome'
#    volumes:
#      - '/dev/shm:/dev/shm'
#    networks:
#      - laravel

#  cron:
#    build:
#      context: .
#      dockerfile: cron.dockerfile
#    container_name: cron
#    volumes:
#      - ..:/var/www/html
#    networks:
#      - laravel


#  netdata:
#    image: netdata/netdata
#    container_name: netdata_${NAME}
#    hostname: example.com # set to fqdn of host
#    ports:
#      - 19999:19999
#    restart: unless-stopped
#    cap_add:
#      - SYS_PTRACE
#    security_opt:
#      - apparmor:unconfined
#    volumes:
#      - netdataconfig:/etc/netdata
#      - netdatalib:/var/lib/netdata
#      - netdatacache:/var/cache/netdata
#      - /etc/passwd:/host/etc/passwd:ro
#      - /etc/group:/host/etc/group:ro
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /etc/os-release:/host/etc/os-release:ro

#volumes:
#  netdataconfig:
#  netdatalib:
#  netdatacache:
